trigger:
- main

variables:
  azureSubscription: 'cron-service-connection'
  functionAppName: 'cron-api'
  environmentName: 'cron-api'
  vmImageName: 'ubuntu-latest'
  webStorageName: 'cronweb'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: BuildWeb
    displayName: Build Web
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'src/web'
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'src/web'
        customCommand: 'run build'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'src/web/build'
        ArtifactName: 'web'
        publishLocation: 'Container'
  - job: BuildApi
    displayName: Build Api
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          src/api/api.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop


- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployWeb
    displayName: Deploy Web
    environment: $(environmentName)
    pool: 
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'web'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureFileCopy@4
              inputs:
                SourcePath: '$(System.ArtifactsDirectory)/web/*'
                azureSubscription: '$(azureSubscription)'
                Destination: 'AzureBlob'
                storage: '$(webStorageName)'
                ContainerName: '$web'
  
  - deployment: DeployApi
    displayName: Deploy Api
    environment: 'development'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'